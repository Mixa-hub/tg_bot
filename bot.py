from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import requests
from datetime import datetime
import feedparser


# # üîê API –∫–ª—é—á –≤—ñ–¥ NewsAPI
# API_KEY = "94601de32797445c8e6b199554b68a81"
# NEWS_URL = "https://newsapi.org/v2/everything"

# üìò /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["üá∫üá¶ –£–∫—Ä–∞—ó–Ω–∞", "üåç –°–≤—ñ—Ç"],
        ["üí∞ –ï–∫–æ–Ω–æ–º—ñ–∫–∞", "‚öΩÔ∏è –°–ø–æ—Ä—Ç"]
    ]
    markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏ —Ç–µ–º—É –Ω–æ–≤–∏–Ω üëá", reply_markup=markup
    )

# üÜò /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–Ø –º–æ–∂—É —à—É–∫–∞—Ç–∏ –Ω–æ–≤–∏–Ω–∏ –¥–ª—è —Ç–µ–±–µ –∑–∞ —Ç–µ–º–∞–º–∏.\n"
        "–ù–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –æ–¥–Ω—É –∑ –∫–Ω–æ–ø–æ–∫ –∞–±–æ –≤–≤–µ–¥–∏ —Ç–µ–º—É –≤—Ä—É—á–Ω—É üì∞"
    )

def get_rss_news(keywords):
    feeds = [
        "https://www.pravda.com.ua/rss/",
        "https://kyivindependent.com/news-archive/feed",
        "https://euromaidanpress.com/feed"
    ]

    results = []
    for url in feeds:
        feed = feedparser.parse(url)
        for entry in feed.entries:
            title = entry.get("title", "")
            summary = entry.get("summary", "")
            link = entry.get("link", "")
            source = feed.feed.get("title", "–¥–∂–µ—Ä–µ–ª–æ")

            text = f"{title} {summary}".lower()
            # if any(word in text for word in keywords):
            # –¢–ò–ú–ß–ê–°–û–í–û ‚Äî –ø–æ–∫–∞–∑–∞—Ç–∏ –≤—Å–µ
            if True:
                results.append({
                    "title": title.strip(),
                    "summary": summary.strip()[:200] + "...",
                    "link": link,
                    "source": source.strip()
                })
    print(f"üß™ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ó–Ω–∞–π–¥–µ–Ω–æ {len(results)} –Ω–æ–≤–∏–Ω:")
    for r in results:
        print(f"  - {r['title']}")

    return results[:5]


# üì∞ –û–±—Ä–æ–±–∫–∞ –≤–∏–±—Ä–∞–Ω–æ—ó —Ç–µ–º–∏
async def handle_topic(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keywords = ["—Ñ—É—Ç–±–æ–ª", "–±–æ–∫—Å", "–≤—ñ–π–Ω–∞"]
    news = get_rss_news(keywords)

    if not news:
        await update.message.reply_text("üîá –ù–æ–≤–∏–Ω–∏ –∑–∞ –∫–ª—é—á–æ–≤–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.")
        return

    messages = []
    for item in news:
        messages.append(
            f"üóûÔ∏è <b>{item['title']}</b> ({item['source']})\n"
            f"{item['summary']}\n{item['link']}"
        )

    await update.message.reply_text("\n\n".join(messages), parse_mode="HTML")


# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token("7891148251:AAGBdvq8SDpx3szIbx9pBBMlMocW9OzTvpg").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_topic))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π!")
    app.run_polling()
